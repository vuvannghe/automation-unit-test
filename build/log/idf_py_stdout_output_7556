[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\esp5.1\automation-unit-test\build\bootloader\esp-idf\esptool_py && E:\esp5.1\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe E:/esp5.1/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/esp5.1/automation-unit-test/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable example_project.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/esp5.1/automation-unit-test/build/example_project.bin
[7/8] cmd.exe /C "cd /D E:\esp5.1\automation-unit-test\build\esp-idf\esptool_py && E:\esp5.1\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe E:/esp5.1/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/esp5.1/automation-unit-test/build/partition_table/partition-table.bin E:/esp5.1/automation-unit-test/build/example_project.bin"
example_project.bin binary size 0x304c0 bytes. Smallest app partition is 0x100000 bytes. 0xcfb40 bytes (81%) free.
[7/8] cmd.exe /C "cd /D E:\esp5.1\Espressif\frameworks\esp-idf-v5.1.2\components\esptool_py && E:\esp5.1\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=E:/esp5.1/Espressif/frameworks/esp-idf-v5.1.2 -D SERIAL_TOOL=E:/esp5.1/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;E:/esp5.1/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/esp5.1/automation-unit-test/build -P E:/esp5.1/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM6 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 example_project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port COM6
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b0:b2:1c:0b:1a:04
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16688...
Writing at 0x00001000... (50 %)
Writing at 0x0000768a... (100 %)
Wrote 26640 bytes (16688 compressed) at 0x00001000 in 0.9 seconds (effective 234.4 kbit/s)...
Hash of data verified.
Compressed 197824 bytes to 109244...
Writing at 0x00010000... (14 %)
Writing at 0x0001d141... (28 %)
Writing at 0x0002289d... (42 %)
Writing at 0x00028830... (57 %)
Writing at 0x0002ecda... (71 %)
Writing at 0x00036857... (85 %)
Writing at 0x0003c416... (100 %)
Wrote 197824 bytes (109244 compressed) at 0x00010000 in 2.6 seconds (effective 604.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 312.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
